prepare_release:
  stage: prepare_release
  image: alpine:latest
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
  variables:
    CHANGELOG_FILE: "CHANGELOG.md"
  script:
    - apk add curl jq git
    - echo "Fetching current version"
    - echo "RELEASE_VERSION=$(cat pyproject.toml | awk -F"version = " {'print $2'} | sed -e 's|["'\'' '^',]||g' | xargs)" > version.env
    - source version.env
    - echo "CURRENT VERSION=$RELEASE_VERSION"

    - echo "Creating a new tag version"
    - 'curl --request POST --header "PRIVATE-TOKEN: $CI_TOKEN" --url "$CI_API_V4_URL/$CI_PROJECT_ID/repository/tags?tag_name=v$RELEASE_VERSION&ref=$CI_COMMIT_BRANCH&message=Release%20$RELEASE_VERSION"'
    - sleep 10

    - echo "Fetching previous version..."
    - PREVIOUS_VERSION=$(git fetch && git tag --sort=-creatordate | sed -n '2p' | sed 's/^v//')
    - echo "PREVIOUS_VERSION=$PREVIOUS_VERSION"

    - echo "Fetching release notes..."
    - |
      extract_release_notes() {
          changelog_file=$1
          current_version=$2
          previous_version=$3

          # Escape dots in version for regex
          current_version_escaped=$(echo "$current_version" | sed 's/\./\\./g')
          previous_version_escaped=$(echo "$previous_version" | sed 's/\./\\./g')

          # Extract release notes
          release_notes=$(awk "/## \[$current_version_escaped\]/,/## \[$previous_version_escaped\]/" "$changelog_file" | sed '$d')
          echo "$release_notes"
      }
    - RELEASE_NOTES=$(extract_release_notes $CHANGELOG_FILE $RELEASE_VERSION $PREVIOUS_VERSION)
    - echo "Release notes:"
    - echo "$RELEASE_NOTES"
    - echo "$RELEASE_NOTES" > release_notes.md
  artifacts:
    reports:
      dotenv: version.env
    paths:
      - release_notes.md

release_job:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  needs:
    - job: prepare_release
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
  script:
    - echo "Creating release"
    - RELEASE_VERSION=$(cat setup.cfg | awk -F"version = " {'print $2'} | sed -e 's|["'\'' '^',]||g' | xargs)
    - echo "Release notes:"
    - echo "$RELEASE_NOTES"
  release:
    name: "${RELEASE_VERSION}"
    description: release_notes.md
    tag_name: "v${RELEASE_VERSION}"
    ref: '$CI_COMMIT_SHA'
